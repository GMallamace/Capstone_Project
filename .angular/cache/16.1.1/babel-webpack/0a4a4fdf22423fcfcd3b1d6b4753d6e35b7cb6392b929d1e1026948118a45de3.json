{"ast":null,"code":"import { JwtHelperService } from '@auth0/angular-jwt';\nimport { BehaviorSubject, map, take, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class AuthService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.jwt = new JwtHelperService();\n    this.apiUrl = 'http://localhost:3000';\n    this.loginUrl = this.apiUrl + '/login';\n    this.registerUrl = this.apiUrl + '/register';\n    this.LezioniUrl = this.apiUrl + '/courses';\n    this.subj = new BehaviorSubject(null);\n    this.user$ = this.subj.asObservable();\n    this.isLogged$ = this.user$.pipe(map(v => !!v)); //si, il doppio esclamativo fa piÃ¹ figo :)\n    this.isTeacher$ = this.user$.pipe(map(v => v?.user.isTeacher));\n    this.getUserData();\n  }\n  getUsers() {\n    return this.http.get(this.apiUrl + '/users');\n  }\n  isTokenExpired(tok) {\n    return this.jwt.isTokenExpired(tok);\n  }\n  getUserData() {\n    let chk = localStorage.getItem('user');\n    let user = null;\n    chk ? user = JSON.parse(localStorage.getItem('user')) : null;\n    user ? this.isTokenExpired(user.accessToken) ? this.subj.next(null) : this.subj.next(user) : this.subj.next(null);\n  }\n  register(data) {\n    return this.http.post(this.registerUrl, data);\n  }\n  login(data) {\n    return this.http.post(this.loginUrl, data).pipe(take(1), tap(val => {\n      this.subj.next(val);\n      localStorage.setItem('user', JSON.stringify(val));\n      const expireDate = this.jwt.getTokenExpirationDate(val.accessToken);\n      this.logoutExp(expireDate);\n    }));\n  }\n  logout() {\n    this.subj.next(null);\n    localStorage.removeItem('user');\n    this.router.navigate(['auth/logout']);\n  }\n  logoutExp(expire) {\n    const msToLogout = expire.getTime() - new Date().getTime();\n    this.autoLogTimer = setTimeout(() => {\n      this.logout();\n    }, msToLogout);\n  }\n  delete(data) {\n    return this.http.delete(this.apiUrl + '/users/' + data.id);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["JwtHelperService","BehaviorSubject","map","take","tap","AuthService","constructor","http","router","jwt","apiUrl","loginUrl","registerUrl","LezioniUrl","subj","user$","asObservable","isLogged$","pipe","v","isTeacher$","user","isTeacher","getUserData","getUsers","get","isTokenExpired","tok","chk","localStorage","getItem","JSON","parse","accessToken","next","register","data","post","login","val","setItem","stringify","expireDate","getTokenExpirationDate","logoutExp","logout","removeItem","navigate","expire","msToLogout","getTime","Date","autoLogTimer","setTimeout","delete","id","i0","ɵɵinject","i1","HttpClient","i2","Router","factory","ɵfac","providedIn"],"sources":["/Users/macbookpro/Desktop/CapstoneProject/Capstone_Project/src/app/Services/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport {\n  BehaviorSubject,\n  Observable,\n  catchError,\n  map,\n  take,\n  tap,\n  throwError,\n} from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { IAccessData } from '../Interface/iaccess-data';\nimport { IRegisterData } from '../Interface/iregister-data';\nimport { ILoginData } from '../Interface/ilogin-data';\nimport { IUser } from '../Interface/iuser';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  jwt: JwtHelperService = new JwtHelperService();\n  autoLogTimer: any;\n  apiUrl: string = 'http://localhost:3000';\n  loginUrl: string = this.apiUrl + '/login';\n  registerUrl: string = this.apiUrl + '/register';\n  LezioniUrl: string = this.apiUrl + '/courses';\n\n\n  private subj = new BehaviorSubject<IAccessData | null>(null);\n  user$ = this.subj.asObservable();\n  isLogged$ = this.user$.pipe(map((v) => !!v)); //si, il doppio esclamativo fa piÃ¹ figo :)\n  isTeacher$ = this.user$.pipe(map((v) => v?.user.isTeacher));\n\n  constructor(private http: HttpClient, private router: Router) {\n    this.getUserData();\n  }\n\n  getUsers(): Observable<IRegisterData[]> {\n    return this.http.get<IRegisterData[]>(this.apiUrl + '/users');\n  }\n\n  isTokenExpired(tok: string): boolean {\n    return this.jwt.isTokenExpired(tok);\n  }\n\n  getUserData(): void {\n    let chk: string | null = localStorage.getItem('user');\n    let user: IAccessData | null = null;\n\n    chk ? (user = JSON.parse(localStorage.getItem('user')!)) : null;\n\n    user\n      ? this.isTokenExpired(user.accessToken)\n        ? this.subj.next(null)\n        : this.subj.next(user)\n      : this.subj.next(null);\n  }\n\n  register(data: IRegisterData): Observable<IAccessData> {\n    return this.http.post<IAccessData>(this.registerUrl, data);\n  }\n\n  login(data: ILoginData): Observable<IAccessData> {\n    return this.http.post<IAccessData>(this.loginUrl, data).pipe(\n      take(1),\n      tap((val) => {\n        this.subj.next(val);\n        localStorage.setItem('user', JSON.stringify(val));\n        const expireDate = this.jwt.getTokenExpirationDate(\n          val.accessToken\n        ) as Date;\n        this.logoutExp(expireDate);\n      })\n    );\n  }\n\n  logout(): void {\n    this.subj.next(null);\n    localStorage.removeItem('user');\n    this.router.navigate(['auth/logout']);\n  }\n\n  logoutExp(expire: Date): void {\n    const msToLogout = expire.getTime() - new Date().getTime();\n    this.autoLogTimer = setTimeout(() => {\n      this.logout();\n    }, msToLogout);\n  }\n\n  delete(data: IUser): Observable<{}> {\n    return this.http.delete(this.apiUrl + '/users/' + data.id);\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}